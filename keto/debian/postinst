#!/bin/bash

set -e

. /usr/share/debconf/confmodule

echo "Hello world"

declare -A KEYMAP

getAccountInfo() {
    KEY_DATA=$(./build/install/bin/keto_cli.sh -A | awk -F"[{}]" '{print $2}')

    #set -f                      # avoid globbing (expansion of *).
    array=(${KEY_DATA//,/ })
    for i in "${!array[@]}"
    do
        key_value=(${array[i]//:/ })
        echo "$i=>${key_value[0]} : ${key_value[1]}"
        key=${key_value[0]//\"}
        value=${key_value[1]//\"}
        db_set keto/${key} $value
        #db_get keto/${key} && value="$RET"
        db_input high keto/${key}
        db_go || true

        db_get keto/${key}
        KEYMAP[${key}]="$RET"

    done
}

#db_get keto/account_hash && account_hash="$RET"

case "$1" in
      configure)
        getAccountInfo
        KETO_CONFIG=/opt/keto/config/config.ini

        cat << EOF >> $KETO_CONFIG
base-data-dir= var/db
# log directory
log-file=ketod_%N.log
# log level
log-level=debug
# the account hash
account-hash=${KEYMAP["account_hash"]}
# public key dir
public-key-dir=keys/ketod/public
# server public and private key
server-public-key=${KEYMAP["private_key"]}
server-private-key=${KEYMAP["public_key"]}
# block chain files
block_meta_index=data/block_meta_index
blocks=data/blocks
transactions=data/transactions
accounts=data/accounts
childs=data/childs
accounts_mapping=data/accounts_mapping
# key store
key_store=data/key_store
# graph configuration
graph_base_dir=data/graph_base_dir
# router
routes=data/routes
# genesis
#genesis_config=config/genesis.json
# default block
default_block=false
block_producer_enabled=false
# rpc peer
rpc-peer=34.241.60.196
EOF

esac
